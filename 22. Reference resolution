import spacy
nlp = spacy.load("en_core_web_sm")

def resolve_references(text):

    doc = nlp(text)
    resolved_text = text
    pronouns = {"he", "she", "it", "they", "him", "her", "them", "his", "her", "its", "their"}
    references = []  
    
    for token in doc:
     
        if token.lower_ in pronouns and token.pos_ == "PRON":
     
            antecedent = None
            for possible_antecedent in reversed(list(doc[:token.i])):
                if possible_antecedent.pos_ in {"NOUN", "PROPN"}:
                    antecedent = possible_antecedent.text
                    break
            
            if antecedent:
                references.append((token.text, antecedent))
                resolved_text = resolved_text.replace(token.text, antecedent, 1)
    
    return resolved_text, references


def main():
    text = input("Enter the text for reference resolution:\n")
    
    print("\nResolving references...")
    resolved_text, references = resolve_references(text)
    
    print("\nOriginal Text:\n", text)
    print("\nResolved Text:\n", resolved_text)
    print("\nResolved References:")
    for pronoun, antecedent in references:
        print(f"Pronoun '{pronoun}' resolved to '{antecedent}'")


if __name__ == "__main__":
    main()
