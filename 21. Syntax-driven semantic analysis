import nltk
from nltk import word_tokenize, pos_tag, RegexpParser

nltk.download('punkt_tab')
nltk.download('averaged_perceptron_tagger')

noun_phrase_meanings = {
    "the cat": "A small domesticated carnivorous mammal.",
    "a dog": "A domesticated carnivorous mammal typically kept as a pet.",
    "the park": "An area of open land for recreational use."
}

def extract_noun_phrases(sentence):
    """Extract noun phrases from the given sentence."""
    tokens = word_tokenize(sentence)
    pos_tags = pos_tag(tokens)

    grammar = "NP: {<DT>?<JJ>*<NN>+}"

    parser = RegexpParser(grammar)
    tree = parser.parse(pos_tags)

    noun_phrases = []
    for subtree in tree.subtrees():
        if subtree.label() == "NP":
            noun_phrase = " ".join(word for word, tag in subtree.leaves())
            noun_phrases.append(noun_phrase)

    return noun_phrases

def get_meaning(noun_phrase):
    """Retrieve the meaning of a noun phrase from the knowledge base."""
    return noun_phrase_meanings.get(noun_phrase.lower(), "Meaning not found.")

def main():
    """Main function to extract and analyze noun phrases."""
    sentence = input("Enter a sentence: ")
    
    print("\nAnalyzing the sentence for noun phrases and their meanings...")
    noun_phrases = extract_noun_phrases(sentence)

    if noun_phrases:
        for np in noun_phrases:
            meaning = get_meaning(np)
            print(f"Noun Phrase: '{np}' - Meaning: {meaning}")
    else:
        print("No noun phrases found in the sentence.")

if __name__ == "__main__":
    main()
